#!/usr/bin/expect
#
# nxnode-login: spawns and controls ssh for backwards compatibility.
#
# Environment variables used:
#
# @param COMMAND_SSH The to be used command for spawning ssh.
# @param NODE_PUBLICKEY The to be used public key for test-nx mode.
#
# Copyright (c) 2004-2007 by Fabian Franz.
#
# License: GPL, version 2
#
# SVN: $Id$
#

# Syntax: nxnode-login {ssh|su|test-nx} user ssh-port executable parameters

set auth_method [lindex $argv 0]
set user [lindex $argv 1]
set port [lindex $argv 2]
set executable [lindex $argv 3]
set parameters [lindex $argv 4]
set command_ssh "ssh"
catch {set command_ssh $env(COMMAND_SSH)}
set host "127.0.0.1"

#
# Special test-nx instruction for nxsetup
#

if { "$auth_method"=="test-nx" } {
	set stty_init "raw icrnl -echo"

	set publickey ""
	catch {set publickey $env(NODE_PUBLICKEY)}
	
	set pid [spawn -noecho $command_ssh -2 -x -l "$user" "$host" -i "$publickey" -o "RhostsAuthentication no" -o "PasswordAuthentication no" -o "RSAAuthentication no" -o "RhostsRSAAuthentication no" -o "PubkeyAuthentication yes" -o "PreferredAuthentications publickey" -p "$port" "$executable $parameters" ]

	set timeout 2
	expect {
		timeout { exit 1 }
		eof { exit 1 }
		"Are you sure you want to continue connecting (yes/no)?" { send "yes\r"; exp_continue }
		"Permission denied*" { exit 1 }
		"HELLO NXSERVER - Version" { 
			expect "NX> 105" { send "quit\r" }
			expect "NX> 999 Bye" { exit 0 }
		}
	}
	exit 1
}

#
# Log the user in via the supplied method.
#

expect_user -re "(.*)\n" 
set password $expect_out(1,string)

set stty_init "raw icrnl -echo"

if { "$auth_method"=="ssh" } { 
	set pid [spawn -noecho $command_ssh -2 -x -l "$user" "$host" -o "NumberOfPasswordPrompts 1" -p "$port" "$executable $parameters" ]
} elseif { "$auth_method"=="su" } {
	set pid [spawn -noecho su - "$user" -c "$executable $parameters" ]
} else {
	exit 1
}

while {1} {
	expect {
		"Are you sure you want to continue connecting (yes/no)?" { send "yes\r" }
		"assword*:"  { sleep 0.3; send "$password\r" }
		"Permission denied*" { exit 1 }
		"su: Authentication failure" { exit 1 }
		"NX> 1000 NXNODE - Version" { 
			break
		}
	} 
}

if { "$tosend"!="" } { 
	send "$tosend\r"
}

expect {
	"NX> 716 finished" { }
	"NX> 700" { 
			set timeout -1
			expect {
				"NX> 1001 Bye." { exit 0 }
				"NX> *" { exp_continue }
			}
			exit 0
		  }
	"NX> 716 Slave mode started successfully." { interact }
	"NX> 716 Public key is already present in:" { }
	"NX> 716 Public key added to:" { }
	"NX> 716 Terminating session * on user request." { }
	"NX> 716 Suspending session * on user request." { }
	"NX> 500 Error: " { exit 1}
}
expect "NX> 1001 Bye."
